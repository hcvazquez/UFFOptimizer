'use strict';

var _chai = require('chai');

var _esprima = require('../third_party/esprima');

var _ = require('..');

describe('ES6 super', function () {
    it('is not handled as reference', function () {
        var ast = (0, _esprima.parse)('\n            class Hello {\n                constructor() {\n                    super();\n                }\n\n                method() {\n                    super.method();\n                }\n            }\n        ');

        var scopeManager = (0, _.analyze)(ast, { ecmaVersion: 6 });
        (0, _chai.expect)(scopeManager.scopes).to.have.length(4);

        var scope = scopeManager.scopes[0];
        (0, _chai.expect)(scope.type).to.be.equal('global');
        (0, _chai.expect)(scope.variables).to.have.length(1);
        (0, _chai.expect)(scope.variables[0].name).to.be.equal('Hello');
        (0, _chai.expect)(scope.references).to.have.length(0);

        scope = scopeManager.scopes[1];
        (0, _chai.expect)(scope.type).to.be.equal('class');
        (0, _chai.expect)(scope.variables).to.have.length(1);
        (0, _chai.expect)(scope.variables[0].name).to.be.equal('Hello');
        (0, _chai.expect)(scope.references).to.have.length(0);

        scope = scopeManager.scopes[2];
        (0, _chai.expect)(scope.type).to.be.equal('function');
        (0, _chai.expect)(scope.variables).to.have.length(1);
        (0, _chai.expect)(scope.variables[0].name).to.be.equal('arguments');
        (0, _chai.expect)(scope.references).to.have.length(0); // super is specially handled like `this`.

        scope = scopeManager.scopes[3];
        (0, _chai.expect)(scope.type).to.be.equal('function');
        (0, _chai.expect)(scope.variables).to.have.length(1);
        (0, _chai.expect)(scope.variables[0].name).to.be.equal('arguments');
        (0, _chai.expect)(scope.references).to.have.length(0); // super is specially handled like `this`.
    });
});

// vim: set sw=4 ts=4 et tw=80 :
// -*- coding: utf-8 -*-
//  Copyright (C) 2015 Yusuke Suzuki <utatane.tea@gmail.com>
//
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions are met:
//
//    * Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//    * Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
//  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
//  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
//  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
//  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
//  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
//  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVzNi1zdXBlci5qcyJdLCJuYW1lcyI6WyJkZXNjcmliZSIsIml0IiwiYXN0Iiwic2NvcGVNYW5hZ2VyIiwiZWNtYVZlcnNpb24iLCJzY29wZXMiLCJ0byIsImhhdmUiLCJsZW5ndGgiLCJzY29wZSIsInR5cGUiLCJiZSIsImVxdWFsIiwidmFyaWFibGVzIiwibmFtZSIsInJlZmVyZW5jZXMiXSwibWFwcGluZ3MiOiI7O0FBdUJBOztBQUNBOztBQUNBOztBQUVBQSxTQUFTLFdBQVQsRUFBc0IsWUFBVztBQUM3QkMsT0FBRyw2QkFBSCxFQUFrQyxZQUFXO0FBQ3pDLFlBQU1DLE1BQU0sbVBBQVo7O0FBWUEsWUFBTUMsZUFBZSxlQUFRRCxHQUFSLEVBQWEsRUFBQ0UsYUFBYSxDQUFkLEVBQWIsQ0FBckI7QUFDQSwwQkFBT0QsYUFBYUUsTUFBcEIsRUFBNEJDLEVBQTVCLENBQStCQyxJQUEvQixDQUFvQ0MsTUFBcEMsQ0FBMkMsQ0FBM0M7O0FBRUEsWUFBSUMsUUFBUU4sYUFBYUUsTUFBYixDQUFvQixDQUFwQixDQUFaO0FBQ0EsMEJBQU9JLE1BQU1DLElBQWIsRUFBbUJKLEVBQW5CLENBQXNCSyxFQUF0QixDQUF5QkMsS0FBekIsQ0FBK0IsUUFBL0I7QUFDQSwwQkFBT0gsTUFBTUksU0FBYixFQUF3QlAsRUFBeEIsQ0FBMkJDLElBQTNCLENBQWdDQyxNQUFoQyxDQUF1QyxDQUF2QztBQUNBLDBCQUFPQyxNQUFNSSxTQUFOLENBQWdCLENBQWhCLEVBQW1CQyxJQUExQixFQUFnQ1IsRUFBaEMsQ0FBbUNLLEVBQW5DLENBQXNDQyxLQUF0QyxDQUE0QyxPQUE1QztBQUNBLDBCQUFPSCxNQUFNTSxVQUFiLEVBQXlCVCxFQUF6QixDQUE0QkMsSUFBNUIsQ0FBaUNDLE1BQWpDLENBQXdDLENBQXhDOztBQUVBQyxnQkFBUU4sYUFBYUUsTUFBYixDQUFvQixDQUFwQixDQUFSO0FBQ0EsMEJBQU9JLE1BQU1DLElBQWIsRUFBbUJKLEVBQW5CLENBQXNCSyxFQUF0QixDQUF5QkMsS0FBekIsQ0FBK0IsT0FBL0I7QUFDQSwwQkFBT0gsTUFBTUksU0FBYixFQUF3QlAsRUFBeEIsQ0FBMkJDLElBQTNCLENBQWdDQyxNQUFoQyxDQUF1QyxDQUF2QztBQUNBLDBCQUFPQyxNQUFNSSxTQUFOLENBQWdCLENBQWhCLEVBQW1CQyxJQUExQixFQUFnQ1IsRUFBaEMsQ0FBbUNLLEVBQW5DLENBQXNDQyxLQUF0QyxDQUE0QyxPQUE1QztBQUNBLDBCQUFPSCxNQUFNTSxVQUFiLEVBQXlCVCxFQUF6QixDQUE0QkMsSUFBNUIsQ0FBaUNDLE1BQWpDLENBQXdDLENBQXhDOztBQUVBQyxnQkFBUU4sYUFBYUUsTUFBYixDQUFvQixDQUFwQixDQUFSO0FBQ0EsMEJBQU9JLE1BQU1DLElBQWIsRUFBbUJKLEVBQW5CLENBQXNCSyxFQUF0QixDQUF5QkMsS0FBekIsQ0FBK0IsVUFBL0I7QUFDQSwwQkFBT0gsTUFBTUksU0FBYixFQUF3QlAsRUFBeEIsQ0FBMkJDLElBQTNCLENBQWdDQyxNQUFoQyxDQUF1QyxDQUF2QztBQUNBLDBCQUFPQyxNQUFNSSxTQUFOLENBQWdCLENBQWhCLEVBQW1CQyxJQUExQixFQUFnQ1IsRUFBaEMsQ0FBbUNLLEVBQW5DLENBQXNDQyxLQUF0QyxDQUE0QyxXQUE1QztBQUNBLDBCQUFPSCxNQUFNTSxVQUFiLEVBQXlCVCxFQUF6QixDQUE0QkMsSUFBNUIsQ0FBaUNDLE1BQWpDLENBQXdDLENBQXhDLEVBaEN5QyxDQWdDSTs7QUFFN0NDLGdCQUFRTixhQUFhRSxNQUFiLENBQW9CLENBQXBCLENBQVI7QUFDQSwwQkFBT0ksTUFBTUMsSUFBYixFQUFtQkosRUFBbkIsQ0FBc0JLLEVBQXRCLENBQXlCQyxLQUF6QixDQUErQixVQUEvQjtBQUNBLDBCQUFPSCxNQUFNSSxTQUFiLEVBQXdCUCxFQUF4QixDQUEyQkMsSUFBM0IsQ0FBZ0NDLE1BQWhDLENBQXVDLENBQXZDO0FBQ0EsMEJBQU9DLE1BQU1JLFNBQU4sQ0FBZ0IsQ0FBaEIsRUFBbUJDLElBQTFCLEVBQWdDUixFQUFoQyxDQUFtQ0ssRUFBbkMsQ0FBc0NDLEtBQXRDLENBQTRDLFdBQTVDO0FBQ0EsMEJBQU9ILE1BQU1NLFVBQWIsRUFBeUJULEVBQXpCLENBQTRCQyxJQUE1QixDQUFpQ0MsTUFBakMsQ0FBd0MsQ0FBeEMsRUF0Q3lDLENBc0NJO0FBQ2hELEtBdkNEO0FBd0NILENBekNEOztBQTJDQTtBQXRFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJlczYtc3VwZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyAtKi0gY29kaW5nOiB1dGYtOCAtKi1cbi8vICBDb3B5cmlnaHQgKEMpIDIwMTUgWXVzdWtlIFN1enVraSA8dXRhdGFuZS50ZWFAZ21haWwuY29tPlxuLy9cbi8vICBSZWRpc3RyaWJ1dGlvbiBhbmQgdXNlIGluIHNvdXJjZSBhbmQgYmluYXJ5IGZvcm1zLCB3aXRoIG9yIHdpdGhvdXRcbi8vICBtb2RpZmljYXRpb24sIGFyZSBwZXJtaXR0ZWQgcHJvdmlkZWQgdGhhdCB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnMgYXJlIG1ldDpcbi8vXG4vLyAgICAqIFJlZGlzdHJpYnV0aW9ucyBvZiBzb3VyY2UgY29kZSBtdXN0IHJldGFpbiB0aGUgYWJvdmUgY29weXJpZ2h0XG4vLyAgICAgIG5vdGljZSwgdGhpcyBsaXN0IG9mIGNvbmRpdGlvbnMgYW5kIHRoZSBmb2xsb3dpbmcgZGlzY2xhaW1lci5cbi8vICAgICogUmVkaXN0cmlidXRpb25zIGluIGJpbmFyeSBmb3JtIG11c3QgcmVwcm9kdWNlIHRoZSBhYm92ZSBjb3B5cmlnaHRcbi8vICAgICAgbm90aWNlLCB0aGlzIGxpc3Qgb2YgY29uZGl0aW9ucyBhbmQgdGhlIGZvbGxvd2luZyBkaXNjbGFpbWVyIGluIHRoZVxuLy8gICAgICBkb2N1bWVudGF0aW9uIGFuZC9vciBvdGhlciBtYXRlcmlhbHMgcHJvdmlkZWQgd2l0aCB0aGUgZGlzdHJpYnV0aW9uLlxuLy9cbi8vICBUSElTIFNPRlRXQVJFIElTIFBST1ZJREVEIEJZIFRIRSBDT1BZUklHSFQgSE9MREVSUyBBTkQgQ09OVFJJQlVUT1JTIFwiQVMgSVNcIlxuLy8gIEFORCBBTlkgRVhQUkVTUyBPUiBJTVBMSUVEIFdBUlJBTlRJRVMsIElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBUSEVcbi8vICBJTVBMSUVEIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZIEFORCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRVxuLy8gIEFSRSBESVNDTEFJTUVELiBJTiBOTyBFVkVOVCBTSEFMTCA8Q09QWVJJR0hUIEhPTERFUj4gQkUgTElBQkxFIEZPUiBBTllcbi8vICBESVJFQ1QsIElORElSRUNULCBJTkNJREVOVEFMLCBTUEVDSUFMLCBFWEVNUExBUlksIE9SIENPTlNFUVVFTlRJQUwgREFNQUdFU1xuLy8gIChJTkNMVURJTkcsIEJVVCBOT1QgTElNSVRFRCBUTywgUFJPQ1VSRU1FTlQgT0YgU1VCU1RJVFVURSBHT09EUyBPUiBTRVJWSUNFUztcbi8vICBMT1NTIE9GIFVTRSwgREFUQSwgT1IgUFJPRklUUzsgT1IgQlVTSU5FU1MgSU5URVJSVVBUSU9OKSBIT1dFVkVSIENBVVNFRCBBTkRcbi8vICBPTiBBTlkgVEhFT1JZIE9GIExJQUJJTElUWSwgV0hFVEhFUiBJTiBDT05UUkFDVCwgU1RSSUNUIExJQUJJTElUWSwgT1IgVE9SVFxuLy8gIChJTkNMVURJTkcgTkVHTElHRU5DRSBPUiBPVEhFUldJU0UpIEFSSVNJTkcgSU4gQU5ZIFdBWSBPVVQgT0YgVEhFIFVTRSBPRlxuLy8gIFRISVMgU09GVFdBUkUsIEVWRU4gSUYgQURWSVNFRCBPRiBUSEUgUE9TU0lCSUxJVFkgT0YgU1VDSCBEQU1BR0UuXG5cbmltcG9ydCB7IGV4cGVjdCB9IGZyb20gJ2NoYWknO1xuaW1wb3J0IHsgcGFyc2UgfSBmcm9tICcuLi90aGlyZF9wYXJ0eS9lc3ByaW1hJztcbmltcG9ydCB7IGFuYWx5emUgfSBmcm9tICcuLic7XG5cbmRlc2NyaWJlKCdFUzYgc3VwZXInLCBmdW5jdGlvbigpIHtcbiAgICBpdCgnaXMgbm90IGhhbmRsZWQgYXMgcmVmZXJlbmNlJywgZnVuY3Rpb24oKSB7XG4gICAgICAgIGNvbnN0IGFzdCA9IHBhcnNlKGBcbiAgICAgICAgICAgIGNsYXNzIEhlbGxvIHtcbiAgICAgICAgICAgICAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgICAgICAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBtZXRob2QoKSB7XG4gICAgICAgICAgICAgICAgICAgIHN1cGVyLm1ldGhvZCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgYCk7XG5cbiAgICAgICAgY29uc3Qgc2NvcGVNYW5hZ2VyID0gYW5hbHl6ZShhc3QsIHtlY21hVmVyc2lvbjogNn0pO1xuICAgICAgICBleHBlY3Qoc2NvcGVNYW5hZ2VyLnNjb3BlcykudG8uaGF2ZS5sZW5ndGgoNCk7XG5cbiAgICAgICAgbGV0IHNjb3BlID0gc2NvcGVNYW5hZ2VyLnNjb3Blc1swXTtcbiAgICAgICAgZXhwZWN0KHNjb3BlLnR5cGUpLnRvLmJlLmVxdWFsKCdnbG9iYWwnKTtcbiAgICAgICAgZXhwZWN0KHNjb3BlLnZhcmlhYmxlcykudG8uaGF2ZS5sZW5ndGgoMSk7XG4gICAgICAgIGV4cGVjdChzY29wZS52YXJpYWJsZXNbMF0ubmFtZSkudG8uYmUuZXF1YWwoJ0hlbGxvJyk7XG4gICAgICAgIGV4cGVjdChzY29wZS5yZWZlcmVuY2VzKS50by5oYXZlLmxlbmd0aCgwKTtcblxuICAgICAgICBzY29wZSA9IHNjb3BlTWFuYWdlci5zY29wZXNbMV07XG4gICAgICAgIGV4cGVjdChzY29wZS50eXBlKS50by5iZS5lcXVhbCgnY2xhc3MnKTtcbiAgICAgICAgZXhwZWN0KHNjb3BlLnZhcmlhYmxlcykudG8uaGF2ZS5sZW5ndGgoMSk7XG4gICAgICAgIGV4cGVjdChzY29wZS52YXJpYWJsZXNbMF0ubmFtZSkudG8uYmUuZXF1YWwoJ0hlbGxvJyk7XG4gICAgICAgIGV4cGVjdChzY29wZS5yZWZlcmVuY2VzKS50by5oYXZlLmxlbmd0aCgwKTtcblxuICAgICAgICBzY29wZSA9IHNjb3BlTWFuYWdlci5zY29wZXNbMl07XG4gICAgICAgIGV4cGVjdChzY29wZS50eXBlKS50by5iZS5lcXVhbCgnZnVuY3Rpb24nKTtcbiAgICAgICAgZXhwZWN0KHNjb3BlLnZhcmlhYmxlcykudG8uaGF2ZS5sZW5ndGgoMSk7XG4gICAgICAgIGV4cGVjdChzY29wZS52YXJpYWJsZXNbMF0ubmFtZSkudG8uYmUuZXF1YWwoJ2FyZ3VtZW50cycpO1xuICAgICAgICBleHBlY3Qoc2NvcGUucmVmZXJlbmNlcykudG8uaGF2ZS5sZW5ndGgoMCk7ICAvLyBzdXBlciBpcyBzcGVjaWFsbHkgaGFuZGxlZCBsaWtlIGB0aGlzYC5cblxuICAgICAgICBzY29wZSA9IHNjb3BlTWFuYWdlci5zY29wZXNbM107XG4gICAgICAgIGV4cGVjdChzY29wZS50eXBlKS50by5iZS5lcXVhbCgnZnVuY3Rpb24nKTtcbiAgICAgICAgZXhwZWN0KHNjb3BlLnZhcmlhYmxlcykudG8uaGF2ZS5sZW5ndGgoMSk7XG4gICAgICAgIGV4cGVjdChzY29wZS52YXJpYWJsZXNbMF0ubmFtZSkudG8uYmUuZXF1YWwoJ2FyZ3VtZW50cycpO1xuICAgICAgICBleHBlY3Qoc2NvcGUucmVmZXJlbmNlcykudG8uaGF2ZS5sZW5ndGgoMCk7ICAvLyBzdXBlciBpcyBzcGVjaWFsbHkgaGFuZGxlZCBsaWtlIGB0aGlzYC5cbiAgICB9KTtcbn0pO1xuXG4vLyB2aW06IHNldCBzdz00IHRzPTQgZXQgdHc9ODAgOlxuIl19
